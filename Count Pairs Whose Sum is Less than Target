Given a 0-indexed integer array nums of length n and an integer target, return the number of pairs (i, j) where 0 <= i < j < n and nums[i] + nums[j] < target.



intuition - Use 2 pointer in this question if u dont want to do nested loops. Make the starting element 1st pointer and other pointer will be the last element. Sort the array so if the condition match once then 
            all the element left of the pointer will also meet the condition. and increment left otherwise decrement right. Atlast return count(c) [l- is left pointer, r- right pointer]



class Solution:
    def countPairs(self, nums: List[int], target: int) -> int:
        nums.sort()
        c,l,r=0,0,len(nums)-1
        while r>l:
            if nums[l]+nums[r]<target:
                c+=r-l
                l+=1
            else:
                r-=1
        return c
