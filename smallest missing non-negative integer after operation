You are given a 0-indexed integer array nums and an integer value.

In one operation, you can add or subtract value from any element of nums.

For example, if nums = [1,2,3] and value = 2, you can choose to subtract value from nums[0] to make nums = [-1,2,3].
The MEX (minimum excluded) of an array is the smallest missing non-negative integer in it.

For example, the MEX of [-1,2,3] is 0 while the MEX of [1,0,3] is 2.
Return the maximum MEX of nums after applying the mentioned operation any number of times.




class Solution:
    def findSmallestInteger(self, nums: List[int], value: int) -> int:
        dic = {}
        for i in nums:
            temp = i%value
            if temp in dic.keys():
                dic[temp] +=1
            else:
                dic[temp] = 1
        val=0
        while True:
            temp = val%value
            if temp in dic.keys() and dic[temp]>0:
                dic[temp] -= 1
                val += 1
            else:
                return val
