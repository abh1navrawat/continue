Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, 
return the area of the largest rectangle in the histogram.


DIFFICULTY - HARD


intuition - we are using monotonic stack for this question. We iterate over height array and add them to the stack as long as the last element
            in the stack is less than the current bar. When the condition doesn't hold, we start to calculate areas by popping out elements from the stack until
            the last element of the stack is greater than the current. Total no. of elements popped i multiplied by the first element popped 
            to find the area. We also need to store the elements that are popped in a stack so e can use them later if needed.

            

class Solution:
    def largestRectangleArea(self, heights: List[int]) -> int:
        st,res=[],0
        for i in heights + [-1]:
            step=0
            while st and st[-1][1]>= i:
                w,h=st.pop()
                step+=w
                res=max(res,step*h)
            st.append((step+1,i))
        return res
