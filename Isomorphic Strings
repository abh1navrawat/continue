Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.




class Solution:
    def isIsomorphic(self, s: str, t: str) -> bool:
    si = {}
        ti = {}
        for i in range(len(s)):
            if s[i] not in si and t[i] not in ti:
                si[s[i]] = t[i]
                ti[t[i]] = s[i]
            elif s[i] in si and si[s[i]] == t[i]:
                continue
            else:
                return False
            
        return True
