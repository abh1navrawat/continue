Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.





class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        dic={}
        duc={}
        for val in s:
            if val in dic:
                dic[val]+=1
            else:
                dic[val]=1
        for j in t:
            if j in duc:
                duc[j]+=1
            else:
                duc[j]=1
        print(dic)
        print(duc)
        if duc==dic:return True
        else:return False






Intuition - Easiest would be to just use the counter function(from the collections module). Other way would be to compare length if equal then just make to dict and add key value pairs as per the string
            (other way would be convert it to list then dict). 





class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        if len(s) != len(t):
            return False
        
        s_count = {}
        t_count = {}
        
        for i in range(len(s)):
            s_count[s[i]] = 1 + s_count.get(s[i], 0)
            t_count[t[i]] = 1 + t_count.get(t[i], 0)
        
        return s_count == t_count
