Given an integer n, return the number of prime numbers that are strictly less than n




intuition - memory limit exceeded, we can make a list of prime numbers. Its better than to check each number one by one. We are starting from 3(2nd prime number). We cannot start from 2(fisrt prime number)
            because if the list is empty it cannot divide with anything.




class Solution:
    def countPrimes(self, n: int) -> int:
        p=[2]
        if n==0 or n==1:
            return 0
        for i in range(3,n):
            for j in p:
                if i%j!=0:
                    p.append(j)
        return len(p)
