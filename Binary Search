Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.

You must write an algorithm with O(log n) runtime complexity.




intuition -  this work on the concept of divide and conquer. Create 2 variable assign index of  the first element and last element respectively.
             inside a loop create another variable that represent the middle element of the array. now check whether the required no is greater than of middle
             no. if so change low to middle+1 (rest of the array is useless) otherwise change the high to middle-1. it will iterate until required no. is not found.
class Solution:
    def search(self, nums: List[int], target: int) -> int:
        high= len(nums)-1
        low=0
        while low<= high:
            middle = ( high + low )//2
            if target > nums[middle]:
                low= middle+1
            elif target< nums[middle]:
                high= middle-1
            else:
                return middle
        return -1
