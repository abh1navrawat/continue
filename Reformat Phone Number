You are given a phone number as a string number. number consists of digits, spaces ' ', and/or dashes '-'.

You would like to reformat the phone number in a certain manner. Firstly, remove all spaces and dashes. Then, group the digits from left to right into blocks of length 3 until there are 4 or fewer digits. The final digits are then grouped as follows:

2 digits: A single block of length 2.
3 digits: A single block of length 3.
4 digits: Two blocks of length 2 each.
The blocks are then joined by dashes. Notice that the reformatting process should never produce any blocks of length 1 and produce at most two blocks of length 2.

Return the phone number after formatting.



intuition - remove all the spaces and dashes(string are immutabe thats why use replace). Break the newly formed such that if only 2,3,4 digits are left. Atlast return the pieces list by joing all the blocks 
            using the dash.



class Solution:
    def reformatNumber(self, number: str) -> str:
        s = number.replace(" ", "").replace("-", "")
        pieces = list()
        while s:
            if len(s) == 2:
                pieces.append(s)
                break
            elif len(s) == 4:
                pieces.append(s[:2])
                pieces.append(s[2:])
                break
            else:
                pieces.append(s[:3])
                s = s[3:]
        return "-".join(pieces)
