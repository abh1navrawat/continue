Design a time-based key-value data structure that can store multiple values for the same key at different time stamps
and retrieve the key's value at a certain timestamp.

Implement the TimeMap class:

TimeMap() Initializes the object of the data structure.

void set(String key, String value, int timestamp) Stores the key key with the value value at the given time timestamp.

String get(String key, int timestamp) Returns a value such that set was called previously, with timestamp_prev <= timestamp.
If there are multiple such values, it returns the value associated with the largest timestamp_prev. If there are no values, it returns "".






intuition -  for this quesetion we have to create 2 dictionary. One will keep values and the other will keep timestamps.
             In the set portion we will append the timestamp and values to their respective variables.
             For get portion we have to search in the timestamp dictionary that where should the given timestamp will come, we will store that in idx(index).
             for searching where should the timestamp would come we will use bisect module( it basically tell where a element should be placed in a sorted list)




class TimeMap:

    def __init__(self):
        self.ts = collections.defaultdict(list)
        self.val= collections.defaultdict(list)

    def set(self, key: str, value: str, timestamp: int) -> None:
        self.ts[key].append(timestamp)
        self.val[key].append(value)
