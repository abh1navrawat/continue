You are given the head of a singly linked-list. The list can be represented as:

L0 → L1 → … → Ln - 1 → Ln
Reorder the list to be on the following form:

L0 → Ln → L1 → Ln - 1 → L2 → Ln - 2 → …
You may not modify the values in the list's nodes. Only nodes themselves may be changed.






class Solution:
    def reorderList(self, head: Optional[ListNode]) -> None:
        """
        Do not return anything, modify head in-place instead.
        """
        if not head:
            return
        stack=[]
        node=head
        while node:
            stack.append(node)
            node=node.next
        node = head
        for i in range(len(stack)//2):
            n=stack.pop()
            t=node.next
            node.next=n
            n.next=t
            node=t
        node.next=None
